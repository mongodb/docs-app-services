.. _edge-server-manage-atlas:

============================
Manage Edge Servers in Atlas
============================

.. meta::
   :description: Learn how to create an Edge Server Service, and create, delete, or check the status of Edge Servers.

.. facet::
   :name: genre 
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Before You Begin
----------------

.. tabs-realm-admin-interfaces::

   .. tab::
      :tabid: ui

      You need the following to manage Edge Servers in the Atlas UI:

      - .. include:: /includes/prereqs/atlas-account.rst

   .. tab::
      :tabid: api

      You need the following to manage Edge Servers with the Admin API:

      - .. include:: /includes/prereqs/atlas-account.rst

      - .. include:: /includes/prereqs/atlas-admin-api-key.rst

      - .. include:: /includes/prereqs/api-project-app-id.rst

.. _create-edge-server-service:

Create an Edge Server Service
-----------------------------

The Edge Server Service is your Atlas destination to create, delete, or check
on your Edge Server instances. 

There are two types of services that enable you to use Edge Server:

- Edge Server Service: use this option if you want clients to connect to the 
  Edge Server with MongoDB Drivers and tools. It infers and updates the schema 
  from the documents you insert, and provides a developer experience familiar 
  to MongoDB developers. The Edge Server Service rejects incoming Atlas Device
  SDK connections.
- Device Sync Service, adding Edge Servers: use this option if you want to 
  develop client apps using Atlas Device SDK. This option involves more strict 
  schema enforcement, which the SDKs use to automatically sync objects 
  across devices and handle conflict resolution.

Regardless of which type of service you choose, Edge Servers use Device Sync 
to sync data between the Edge Server instance and Atlas. Even when you choose 
an Edge Server Service, you must first enable Device Sync before you can create 
Edge Server instances.

.. important:: You can't add Atlas Device SDK Apps later to an Edge Server Service

   You can always add Edge Servers to a Device Sync Service. But you can't use
   Atlas Device SDK connections with an Edge Server Service. 
   
   Users are not portable between services. If you start with an Edge Server 
   Service, but later want to add an Atlas Device SDK application, there is no 
   way to transfer any users in your Edge Service to a new Device Sync Service.

You can create an Edge Server-compatible service in Data Services or App 
Services. 

- You might select Data Services when you just want to get started building
  with Edge Server or Device Sync and Edge Server, and don't need other 
  App Services.
- You might select App Services when you want to bundle your service with 
  authentication, Functions, Triggers, HTTPS Endpoints, or Values and Secrets.

.. tabs::

   .. tab:: Create a Data Service
      :tabid: atlas-service

      .. include:: /includes/create-service-data-services.rst

      .. include:: /includes/edge-server-enable-device-sync.rst

   .. tab:: Create an App Service
      :tabid: app-service

      Refer to the documentation to :ref:`create-app`.

      When you choose your App type, select ``Edge Server`` or ``Device Sync``. 

      .. include:: /includes/edge-server-enable-device-sync.rst

.. _create-edge-server-instance:

Create an Edge Server Instance
------------------------------

After creating an Edge Server Service, you can add Edge Servers to it. The
service can handle multiple Edge Servers, each of which has its own 
registration key. After you create an Edge Server instance, you must register
it before you begin using it.

.. tabs-realm-admin-interfaces::

   .. tab::
      :tabid: ui

      .. procedure::

         .. step:: Add a server

            Click the :guilabel:`Add a server` button to walk through the 
            process of configuring your new Edge Server instance.

            If this is the first server in your service, you're prompted to 
            select a cluster, connect a data source, and optionally specify 
            which collections to sync to the Edge Server. This configuration
            applies to all Edge Servers in this service.

            For subsequent servers, you're prompted to name you Edge Server.

            The UI provides an installation script, which you can copy and 
            paste into the terminal on the device where you want to install 
            the Edge Server. You also get a token, which you will use in the 
            registration process.

         .. step:: Install the Edge Server code

            Copy and paste the installation script into the terminal on the
            device where you want to install the Edge Server. For more details,
            refer to :ref:`edge-server-install-and-configure`.

         .. step:: Register the Edge Server

            After you configure the Edge Server on the device where you've 
            installed it, you must register the Edge Server. For more details,
            fer to :ref:`edge-server-register`.

            After registering and starting the Edge Server, its 
            :guilabel:`Health` status in the Edge Server dashboard changes
            from :guilabel:`Pending` to :guilabel:`Active`.

   .. tab::
      :tabid: api

      .. procedure::

         .. step:: Authenticate a MongoDB Atlas User

            .. include:: /includes/api-authenticate-instructions.rst

         .. step:: Call the Create Edge Server Endpoint

            Call the <CREATE EDGE SERVER> endpoint to add an Edge Server 
            instance to your service. You must provide the the App's internal 
            ``appId`` hex string:

            .. code-block:: shell

               INSERT API DETAILS HERE

            This returns <INSERT RETURN DETAILS HERE>.

         .. step:: Install the Edge Server code

            Copy and paste the installation script into the terminal on the
            device where you want to install the Edge Server. For more details,
            refer to :ref:`edge-server-install-and-configure`.

         .. step:: Register the Edge Server

            After you configure the Edge Server on the device where you've 
            installed it, you must register the Edge Server. For more details,
            fer to :ref:`edge-server-register`.

.. _list-edge-server-instances:

List Edge Server Instances
--------------------------

You can get a list of your Edge Server instances in the Atlas UI,
or from the Admin API.

.. tabs-realm-admin-interfaces::

   .. tab::
      :tabid: ui

      The Edge Server dashboard lists a brief summary for each Edge Server, 
      including the date and time of the last connection, and a snapshot of 
      its status. You can optionally view details for each Edge Server, or 
      view the logs for each server instance.

      To view the Edge Server dashboard, choose :guilabel:`Edge Server` in
      the left navigation sidebar.

      To view the details for a specific Edge Server, click the 
      :guilabel:`View Details` button for that Edge Server. Alternately,
      click the :guilabel:`App Logs` button to browse logs associated with 
      that Edge Server instance.

   .. tab::
      :tabid: api

      .. procedure::

         .. step:: Authenticate a MongoDB Atlas User

            .. include:: /includes/api-authenticate-instructions.rst

         .. step:: Get the List of Edge Servers

            Call the <LIST EDGE SERVER> endpoint to get a list of all the 
            Edge Servers instances:

            .. code-block:: shell

               INSERT API DETAILS HERE

            Find the ID of the Edge Server whose details you want to view.

         .. step:: Call the Edge Server Info Endpoint

            Call the <GET EDGE SERVER INFO> endpoint with the ID of the Edge
            Server instance whose details you want to view.

            .. code-block:: shell

               INSERT API DETAILS HERE

.. _edge-server-details:

Edge Server Details
~~~~~~~~~~~~~~~~~~~

The information available in the Edge Server details varies depending on 
whether the Edge Server has been registered and connected to Atlas, or whether
registration and connection are still pending.

.. _edge-server-pending:

Pending Edge Server Instances
`````````````````````````````

When an Edge Server has not yet connected to Atlas for the first time, the
Edge Server's :guilabel:`Health` status is :guilabel:`Pending`.

While an Edge Server instance is in :guilabel:`Pending` state, the detail
view includes:

- A button you can use to rename the Edge Server.
- An alert noting that you have not completed setting up the Edge Server
- The Edge Server's ID
- The Install command that you can use in the terminal to install the 
  Edge Server code
- A button to regenerate the registration token
- A button to delete the Edge Server instance

Once you have successfully configured and connected an Edge Server instance,
the detail view changes to provide additional details about the instance.

.. _edge-server-active-or-failed:

Active or Failed Edge Server Instances
``````````````````````````````````````

After you have connected an Edge Server to Atlas for the first time, the 
Edge Server's :guilabel:`Health` status changes to :guilabel:`Active`. 

If the Edge Server instance encounters a fatal error, its :guilabel:`Health`
status changes to :guilabel:`Failed`.

The details available for active or failed instances include:

- A button you can use to rename the Edge Server.
- Any active alerts about the Edge Server.
- The date and time of the last connection.
- The Edge Server's ID. You can use this to set permissions for this specific 
  Edge Server.
- The Edge Server's query. This determines what data is synced between the 
  Edge Server and Atlas, and what data clients can write to the Edge Server.
  Clients can only write data that falls within their permissions, **and**
  the Edge Server's query. For more information, refer to 
  :ref:`specify-edge-server-query`.
- Metrics about the Edge Server. For more information, refer to [ADD REF LATER].
- A button to view the Edge Server's Logs. For more information, refer to 
  [ADD REF LATER].
- Versions. This page lists the Edge Server's current version, and the latest
  available version. If the Edge Server falls more than one major version 
  behind the latest available, it enters a :guilabel:`Failed` state and cannot
  sync with Atlas until it is upgraded. For more information, refer to 
  :ref:`upgrade-edge-server-version`.
- The Install command that you can use in the terminal to install the 
  Edge Server code.
- A button to regenerate the registration token.
- A button to delete the Edge Server instance.

.. _delete-edge-server-instance:

Delete an Edge Server Instance
------------------------------

You can delete an individual Edge Server instance from your Edge Server Service.

.. tabs-realm-admin-interfaces::

   .. tab::
      :tabid: ui

      .. procedure::

         .. step:: Browse to the Edge Server Dashboard

            Click the :guilabel:`Edge Server` option in the left navigation 
            sidebar to open the Edge Server dashboard.

         .. step:: View the Edge Server Instance Details

            Find the Edge Server instance you want to delete in the list,
            and click the :guilabel:`View Details` button.

         .. step:: Delete the Edge Server Instance

            Click the :guilabel:`Delete` button at the bottom of the Edge
            Server details view.

            You'll be prompted to confirm deletion. Follow the prompts to
            confirm that you want to delete the Edge Server.

   .. tab::
      :tabid: api

      .. procedure::

         .. step:: Authenticate a MongoDB Atlas User

            .. include:: /includes/api-authenticate-instructions.rst

         .. step:: Get the ID of the Edge Server to Delete

            Call the <LIST EDGE SERVER> endpoint to get a list of all the 
            Edge Servers instances:

            .. code-block:: shell

               INSERT API DETAILS HERE

            Find the ID of the Edge Server that you want to delete in the list.

         .. step:: Call the Delete Endpoint

            Call the <DELETE EDGE SERVER> endpoint with the ID of the Edge
            Server instance that you want to delete.

            .. code-block:: shell

               INSERT API DETAILS HERE

.. _troubleshoot-edge-server-instance:

Troubleshoot an Edge Server Instance
------------------------------------

A few conditions can cause an Edge Server instance to enter a ``Failed`` state:

- :ref:`edge-server-exceeds-client-maximum-offline-time`
- :ref:`edge-server-more-than-one-major-version-behind`
- :ref:`edge-server-token-invalid`

.. _edge-server-exceeds-client-maximum-offline-time:

Edge Server is Offline Longer than Client Maximum Offline Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Edge Server uses Device Sync to sync data between the on-premise hardware and
Atlas. Device Sync has a 
:ref:`Client Maximum Offline Time <client-maximum-offline-time>` setting.

This setting is enabled by default. It trims history to reduce the amount of
storage required in the backing Atlas cluster. The longer the client maximum
offline time, the more storage Atlas requires to keep historical records that
support Sync.

If an Edge Server is offline longer than this setting, this is an unrecoverable
error. You must wipe and restart the Edge Server. Alternately, when you bring
the Edge Server back online, it will be wiped and restarted automatically.

**This process erases all local unsynced data on the Edge Server.**

Before Edge Server moves from Public Preview to General Availability, you
will have the option to recover local data when this error occurs.

You can change the length of the client maximum offline time in the 
:ref:`sync-settings`.

.. _edge-server-more-than-one-major-version-behind:

Edge Server is More than One Major Version Behind
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Edge Server does not support instances that fall more than one major version
behind the current latest version. If your Edge Server instance falls further 
behind in versions, you must upgrade it to resolve the ``Failed`` state.

For information about upgrading an Edge Server instance, refer to 
:ref:`upgrade-edge-server-version`.

.. _edge-server-token-invalid:

Edge Server Token is Invalid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the Edge Server token is regenerated, and you do not update the API Key
in the Edge Server itself, it can enter a ``Failed`` state.

For more details about how to update the API Key on the Edge Server instance
after regenerating the Edge Server token, refer to 
:ref:`edge-server-cycle-api-key`.
