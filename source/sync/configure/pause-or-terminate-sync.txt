.. _pause-or-terminate-sync:
.. _terminating-and-reenabling-sync:

=======================
Pause or Terminate Sync
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

If you want to disable Atlas Device Sync for your app, you can temporarily pause or 
permanently terminate it. You can also re-enable Device Sync after 
disabling it.

You can temporarily :ref:`pause <pause-sync>` Device Sync if 
you need to pause your cluster. With a temporary pause, you can 
:ref:`resume <resume-sync>` without resetting your :ref:`Device Sync 
configuration <appconfig-sync>` or losing Device Sync metadata.

You can permanently :ref:`terminate <terminating-realm-sync>` and 
:ref:`re-enable <re-enable-realm-sync>` Device Sync for troubleshooting or
if you want to change your :ref:`Device Sync configuration <appconfig-sync>`.

.. _pause-sync:

Pause Sync
----------

You can pause Device Sync for a period of time without disabling
it entirely. When you pause Device Sync, you stop syncing changes between 
Atlas and your application. 

.. important::

   If you need to pause your cluster, pause Device Sync first. Otherwise, you
   must :ref:`terminate <terminating-realm-sync>` and :ref:`re-enable 
   <re-enable-realm-sync>` Device Sync and perform a client reset.

Pausing Device Sync rejects any incoming client connections. This
means that pausing Device Sync for your App stops syncing changes for
all clients.

To pause Device Sync from the client side, using logic
that situationally pauses Device Sync during a session, see your
preferred SDK:

.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      Learn how to :ref:`pause or resume a Device Sync session using the 
      Java SDK <java-pause-or-resume-a-sync-session>`.

   .. tab::
      :tabid: ios

      Learn how to :ref:`pause or resume a Device Sync session using the 
      Swift SDK <ios-suspend-or-resume-a-sync-session>`.

   .. tab::
      :tabid: react-native
      
      Learn how to :ref:`pause or resume a Device Sync session using the 
      React Native SDK <react-native-pause-or-resume-a-sync-session>`.

   .. tab::
      :tabid: node
      
      Learn how to :ref:`pause or resume a Device Sync session using the 
      Node SDK <node-pause-or-resume-a-sync-session>`.

   .. tab::
      :tabid: dotnet

      Learn how to :ref:`pause or resume a Device Sync session using the 
      .Net SDK <dotnet-pause-or-resume-a-sync-session>`.

After pausing Device Sync, you can :ref:`re-enable it <resume-sync>`. 
Pausing Device Sync maintains the configuration settings and all of the 
Device Sync metadata, which contains the sync history. When you re-enable 
paused Device Sync, your clients can reconnect normally.

.. include:: /includes/warn-cannot-renable-paused-sync.rst

Procedure
~~~~~~~~~

.. procedure::

   .. step:: Press the Pause Sync Button

      In the :guilabel:`Device Sync` tab of the App Services UI, press the
      :guilabel:`Pause Sync` button.

      .. figure:: /images/press-pause-sync-button.png
         :alt: the pause sync button


   .. step:: Confirm That You Want to Pause Sync

      In the modal that pops up, press the :guilabel:`Pause Sync` button.

      .. figure:: /images/pause-sync-modal.png
       :alt: the pause sync model


   .. step:: Review Your Changes

      Press the :guilabel:`Review & Deploy` button in the blue notification bar
      telling you that changes have been made to your App Services app.

      .. figure:: /images/pause-sync-review-and-deploy.png
       :alt: "Review & Deploy" notification


   .. step:: Deploy Your App to Pause Sync

      In the model that appears, review your changes and then press the green
      :guilabel:`Deploy` button.

      .. figure:: /images/pause-sync-deploy-button.png
         :alt: Review Changes Model

      You have now paused Device Sync and should get a green notification bar on the
      top of the :guilabel:`Sync` page that states that your deployment was
      successful.

      .. figure:: /images/pause-sync-deployment-successful.png
         :alt: Review Changes Model

.. _resume-sync:

Resume Sync
-----------

After you have paused Device Sync, you can resume it to begin syncing again for
all clients. 

.. include:: /includes/warn-cannot-renable-paused-sync.rst

Procedure
~~~~~~~~~

The process to resume Device Sync is the same as the process to re-enable 
Device Sync. However, when you pause Device Sync, App Services preserves 
your configuration settings and Device Sync metadata.  

To re-enable Device Sync, follow the steps in the :ref:`enable-sync` guide. You can skip the **Configure Sync**
step. 

Clients do not need to perform a client reset when reconnecting after a pause.

.. _terminating-realm-sync:

Terminate Sync
--------------

If you have :ref:`enabled Device Sync <enable-sync>`, you may have to
terminate and re-enable Device Sync under a few different circumstances:

- An upgrade from a Shared Tier {+atlas-short+} Cluster to a Shared or Dedicated instance
- A move to an {+atlas-short+} cluster that is distributed across regions/cloud providers
- An upgrade to NVMe Atlas clusters
- An :manual:`oplog </core/replica-set-oplog/>` rollover
- A paused Device Sync session on a shared tier cluster due to infrequent usage
- Troubleshooting, at the request of MongoDB Support
- Altering a Partition-Based Sync configuration
- Switching between Sync modes. For instance, if you are switching from Partition-Based Sync to Flexible Sync

.. include:: /includes/warn-terminate-sync-client-reset.rst

Procedure
~~~~~~~~~

Terminate Device Sync in your App to stop syncing data across
devices. 

.. procedure::

   .. step:: Press the Terminate Sync Button

      In the :guilabel:`Sync` tab of the App Services UI, click the red
      :guilabel:`Terminate Sync` button.

      .. figure:: /images/click-terminate-sync-button.png
         :alt: the terminate sync button


   .. step:: Confirm That You Want to Terminate Sync

      In the modal that pops up, check that you want to terminate sync by clicking
      the :guilabel:`I want to terminate Sync` checkbox and then click the
      :guilabel:`Terminate Sync` button on the modal.

      .. figure:: /images/terminate-sync-model.png
       :alt: the terminate sync model


   .. step:: Review Your Changes

      Click the :guilabel:`Review & Deploy` button in the blue notification bar
      telling you that changes have been made to your App Services app.

      .. figure:: /images/terminating-sync-review-and-deploy.png
       :alt: "Review & Deploy" notification


   .. step:: Deploy Your App to Terminate Sync

      In the model that appears, review your changes and then click the green
      :guilabel:`Deploy` button.

      .. figure:: /images/terminating-sync-deploy-button.png
         :alt: Review Changes Model

      You have now terminated Device Sync and should get a green notification bar on the
      top of the :guilabel:`Sync` page that states that your deployment was
      successful.

      .. figure:: /images/terminating-sync-deployment-successful.png
         :alt: Review Changes Model


.. _re-enable-realm-sync:

Re-Enable Sync
--------------

After you have terminated Device Sync, you can re-enable it. Re-enabling
Device Sync enables your App to begin syncing changes to Atlas again. 
After you re-enable Device Sync, your App begins accepting incoming
client connections again. However, if a client had previously connected to
your App before you terminated Device Sync, you must perform a client
reset for that client to enable it to connect to App Services again.

Procedure
~~~~~~~~~

When you pause Device Sync, App Services preserves your configuration
settings, and you can skip the **Configure Sync** step. 
When you terminate Device Sync, or when the :manual:`oplog 
</core/replica-set-oplog/>` rolls past the time that you paused Device Sync, 
you must specify the configuration settings again.

To re-enable Device Sync, follow the steps in the :ref:`enable-sync` guide.

If you are re-enabling Device Sync after you have terminated it, you must 
perform a client reset in your client applications:

.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      Learn how to perform a :ref:`Client Reset using the Java SDK <java-client-resets>`.

   .. tab::
      :tabid: ios

      Learn how to perform a :ref:`Client Reset using the Swift SDK <ios-client-resets>`.

   .. tab::
      :tabid: node
      
      Learn how to perform a :ref:`Client Reset using the Node SDK <node-client-resets>`.

   .. tab::
      :tabid: react-native

      Learn how to perform a :ref:`Client Reset using the React Native SDK <react-native-client-resets>`.

   .. tab::
      :tabid: dotnet

      Learn how to perform a :ref:`Client Reset using the .NET SDK <dotnet-client-resets>`.
