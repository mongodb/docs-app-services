.. _flexible-sync:

========================
Specify Queryable Fields
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

When you configure Flexible Sync, you specify one or more fields 
from your :ref:`Sync Schema <sync-schema-overview>` that your client 
application can query. These fields are called **queryable fields**.

.. example::

   In a task tracker app, you might set ``assignee`` or ``owner`` 
   as queryable fields. On the client side, you can then query for tasks 
   whose ``assignee`` or ``owner`` matches the logged-in user. 

Queryable fields apply across all collections in an {+app+}'s Sync Schema. You
can use :ref:`rules and permissions <flexible-sync-rules-and-permissions>` to
configure more granular access control on individual collections.

.. _flexible-sync-eligible-field-types:

Eligible Field Types
--------------------

Flexible Sync only supports top-level primitive fields with a scalar type as 
queryable fields. You can also include arrays of these primitives as queryable 
fields. Flexible Sync does not support embedded objects or arrays of 
objects as queryable fields.

.. seealso:: {+rql+} - Flexible Sync Limitations

   For information on the queries you can perform on these fields, see:
   :ref:`flexible-sync-rql-limitations`


.. _flexible-sync-reserved-field-names:

Reserved Field Names
--------------------

.. include:: /includes/reserved-field-names.rst

Performance and Storage
-----------------------

Queryable fields use storage on the backing Atlas cluster. The more queryable
fields you configure, the more storage you use on the backing cluster. You can
configure up to 10 queryable fields per application for Flexible Sync.

.. seealso::

   Learn more about :ref:`optimizing performance and storage when using Flexible Sync <optimizing-performance-and-storage-flexible-sync>`.
