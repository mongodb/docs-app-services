.. _alter-your-sync-configuration:

=============================
Alter Your Sync Configuration
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

You may want to alter your Atlas Device Sync configuration after you have already
:ref:`enabled Device Sync <enable-realm-sync>`. 

If you are using Partition-Based Device Sync, and want to change the ``Partition Key``,
you can terminate and re-enable Device Sync.

If you are using Flexible Device Sync and want to add or remove queryable
fields, you can do so immediately, without terminating Device Sync.

.. alter-partition-based-sync-config:

Alter Your Partition-Based Sync Configuration
---------------------------------------------

You must :ref:`Terminate Device Sync <terminating-realm-sync>` and
:ref:`Re-enable Device Sync <re-enable-realm-sync>` to make changes to your
Partition-Based Device Sync Configuration. While you are re-enabling
Atlas Device Sync, you can specify a new Partition Key, or changes to your Read/Write
Permissions. Making changes to your Device Sync configuration while
terminating and re-enabling Device Sync will trigger a client reset. To learn
more about handling client resets, read the :ref:`client reset <client-resets>`
documentation.

.. alter-flexible-sync-config:

Alter Your Flexible Sync Configuration
--------------------------------------
To alter your Flexible Sync Configuration, you can add or remove fields in the App Services UI while
Device Sync is enabled without terminating and re-enabling Device Sync. 

.. add-a-queryable-field:

Add a Queryable Field
~~~~~~~~~~~~~~~~~~~~~
To add a queryable field, navigate to the :guilabel:`Device Sync` configuration screen
through the {+leftnav+}. Under the :guilabel:`Select Queryable Fields` heading,
you can create a new field(s) to construct a query on. Finally, make sure to
click :guilabel:`Enable Device Sync` to finish adding your queryable field and enable
Device Sync.

.. note:: 

   Devices using this new field will only be able to Device Sync on this field once the
   device has caught up to the point in time in :ref:`Device Sync History <sync-history>`
   where the field was added. 

.. image:: /images/FS-add-queryable-field.png
   :alt: Add a Queryable Field

.. remove-a-queryable-field:

Remove a Queryable Field
~~~~~~~~~~~~~~~~~~~~~~~~
To remove a queryable field, navigate to the :guilabel:`Sync` configuration
screen through the {+leftnav+}. Under the :guilabel:`Select Queryable Fields`
heading, you can click the :guilabel:`x` button next to the field you wish to
delete. Finally, make sure to click :guilabel:`Enable Device Sync` to finish adding
your queryable field and enable Device Sync.

.. note:: Removing a Queryable Field Triggers a Client Reset on Devices Using That Field

   When you remove a queryable field, any devices still using that field will
   have their Device Sync session dropped and receive a client reset. To learn more
   about handling client resets, read the :ref:`client reset <client-resets>`
   documentation. Clients that are not using this field, will continue syncing
   data normally without receiving any errors. To avoid triggering a client
   reset when you remove the queryable field in the :guilabel:`Device Sync`
   configuration screen, you should also remove this field on the client-side.

.. image:: /images/FS-remove-queryable-field.png
   :alt: Remove a Queryable Field

.. flexible-sync-permission-changes:

Permission Changes
~~~~~~~~~~~~~~~~~~
Making changes to permissions, whether implicitly through user metadata, or
explicitly through changing configuration filters, will trigger a client reset
and re-download of all Device Sync data with the new permissions applied. 

A client reset will not be triggered under the following cases: 

- Adding a new collection to a Device Sync schema, and defining permissions for the new namespace or using default roles. This will not trigger a client reset because permissions have not been applied previously.
- Configuring custom permissions for the new collection in the same :ref:`draft <deploy-ui>` as the new schema. Conversely, deploying a draft with permission changes after you deploy the schema will lead to a client reset, since default permissions were applied in the initial deployment.
