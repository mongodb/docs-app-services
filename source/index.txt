:template: product-landing
:hidefeedback: header
:noprevnext:

.. _realm-cloud:

========================================
What are the Atlas Application Services?
========================================

.. default-domain:: mongodb

.. toctree::
   :titlesonly:
   :hidden:
   
   Introduction </introduction>
   Get Started </get-started>
   Device Sync </sync>
   Edge Server </edge-server>
   GraphQL API </graphql>
   Data API </data-api>
   Functions </functions>
   Triggers </triggers>
   Develop & Deploy Apps </apps>
   Authenticate & Manage Users </users>
   Connect to MongoDB Data Sources </mongodb>
   Define a Data Model </data-model>
   Define Data Access Permissions </rules>
   Secure Your App </security>
   Monitor App Activity </activity>
   Host Files </hosting>
   Reference </reference>
   Release Notes </release-notes/backend>
   Realm SDKs <https://mongodb.com/docs/realm>
   Get Help </help>

.. introduction::
   
   Atlas Application Services are fully-managed backend services and APIs
   that help you build apps, integrate services, and connect to your Atlas
   data faster.
   
   Get started now by building on our :doc:`free tier </billing>`.
   
   .. button:: Start Building
      :uri: https://www.mongodb.com/realm/register?tck=docs_CTA_app_services

.. image:: /images/plp/apis-tech.png
   :alt: Atlas App Services Illustration

.. kicker:: What You Can Do

Build Data-Driven Apps And Services
-----------------------------------

Services like Device Sync, APIs, and Triggers make it easy to build and
run virtually any app or backend service on top of Atlas.

.. tabs::

   .. tab:: Sync Data Across Devices
      :tabid: device-sync

      .. procedure::

         .. step:: Install a Realm SDK

            Device Sync uses Realm's native language objects to define a
            data model and work with data. Everything you need to add
            sync to your app is included in the Realm SDK.
            
            To install an SDK, see the :realm:`Realm SDK documentation
            </>` for your language and platform.

         .. step:: Enable and Configure Sync

            In your Atlas App, enable Device Sync and define read and
            write permissions to control the data that users can sync.
            Once Sync is turned on, you can start syncing from any app
            with the Realm SDKs.

            To enable Sync, see :ref:`Enable Atlas Device Sync <enable-sync>`.

         .. step:: Read and Write Synced Data
            
            Data that you subscribe to with a Realm SDK is automatically
            kept in sync with your Atlas cluster and other clients.
            Apps keep working offline and deterministically sync changes
            whenever a network connection is available.

            To learn how to read, write, and subscribe to data, see the 
            :realm:`Realm SDK documentation </>` for your language and
            platform.
            
      .. image:: /images/plp/realm-sync.png
         :alt: Realm Sync Illustration

   .. tab:: Access Data With a REST API
      :tabid: data-api

      .. procedure::

         .. step:: Enable the Data API CRUD & Aggregation Endpoints

            The MongoDB Atlas Data API lets you read and write data in
            Atlas using HTTPS requests. Once enabled, you can use a
            built-in endpoint to work with data.

            See :ref:`Data API Endpoints <data-api-endpoints>`.
         
         .. step:: Define Custom Endpoints

            You can tailor your API with custom endpoints for your
            application. Each endpoint handles incoming HTTPS requests
            for a specific route and returns configurable HTTPS
            responses.

            See :ref:`Custom Endpoints <custom-endpoints>`.

         .. step:: Secure Your API
            
            Generate an API key that you can use to authenticate
            requests. Alternatively, you can use other authentication
            provider credentials associated with your app.
            
            For details, see :ref:`Data API Authentication <data-api-authentication>`.

         .. step:: Send a Data API Request

            Send requests from any server-side environment that supports
            HTTPS.
            
            .. code-block:: bash
               
               curl -X POST \
                    https://data.mongodb-api.com/app/<YOUR APP ID>/endpoint/data/v1/action/insertOne \
                    -H 'api-key: <YOUR API KEY>' \
                    -H 'Content-Type: application/json' \
                    -d '{
                      "dataSource": "mongodb-atlas",
                      "database": "learn-data-api",
                      "collection": "hello",
                      "document": {
                        "text": "Hello from the Data API!",
                      }
                    }'

      .. image:: /images/plp/connection.png
         :alt: Build a Secure HTTPS API

   .. tab:: Access Data with GraphQL
      :tabid: graphql

      .. procedure::

         .. step:: Define A JSON Schema For Your Data

            The GraphQL API automatically generates a hosted endpoint
            with GraphQL queries and mutations based on JSON schemas
            for the documents in your database.

            .. tabs::

               .. tab:: EJSON Schema
                  :tabid: json

                  .. code-block:: json

                     {
                       "title": "Meeting",
                       "required": ["start", "end", "location"],
                       "properties": {
                         "_id": { "bsonType": "objectId" },
                         "start": { "bsonType": "date" },
                         "end": { "bsonType": "date" },
                         "location": { "bsonType": "string" }
                       }
                     }

               .. tab:: GraphQL Schema
                  :tabid: graphql

                  .. code-block:: graphql

                     type Meeting {
                       _id: ObjectId
                       start: DateTime!
                       end: DateTime!
                       location: String!
                     }

         .. step:: Secure Your API
            
            Generate an API key that you can use to authenticate
            requests. Alternatively, you can use other authentication
            provider credentials associated with your app.
            
            For details, see :ref:`Authenticate GraphQL Requests <graphql-authentication>`.

         .. step:: Send Your First Request

            Send your first GraphQL request from any server-side or
            frontend environment that supports HTTPS. You can also use a
            specialized GraphQL request tool or library.
            
            Learn how to :realm:`Send GraphQL Requests with Apollo
            Client </web/graphql-apollo-react/>`.

            .. tabs::

               .. tab:: GraphQL
                  :tabid: graphql

                  .. code-block:: graphql

                     query GetMeetingsInDateRange($start: DateTime!, $end: DateTime!) {
                       meetings(query: {
                         start_gte: $start,
                         end_lte: $end
                       }) {
                         _id
                         start
                         end
                         location
                       }
                     }

               .. tab:: cURL
                  :tabid: curl

                  .. code-block:: bash

                     curl -X POST https://realm.mongodb.com/api/client/v2.0/app/<Your App ID>/graphql \
                       -H 'apiKey: <YOUR API KEY>' \
                       -d {
                         "query": "query GetMeetingsInDateRange($start: DateTime!, $end: DateTime!) { meetings(query: { start_gte: $start, end_lte: $end }) { _id start end location } }"
                         "variables": { "start": "2022-01-01T00:00:00.000Z", "end": "2022-03-31T23:59:59.999Z" }
                       }

      .. image:: /images/plp/connection.png
         :alt: Build a Secure GraphQL API

   .. tab:: Respond to Events Automatically
      :tabid: triggers
      
      .. procedure::

         .. step:: Create and Configure Your Trigger

            Set up a trigger to respond to events like database
            operations or user logins as they occur. Or, configure a
            trigger to run on a periodic schedule. For each trigger type
            you can define custom conditions to control exactly when the
            trigger should fire.

            To learn more, see :ref:`Triggers <triggers>`.

         .. step:: Write the Trigger's Handler Logic

            When a trigger fires, it passes the event data to a handler
            that can perform any action you want. You can run a
            serverless JavaScript function or pass the event to AWS
            EventBridge.

         .. step:: Fire the Trigger Automatically

            Once deployed, the trigger constantly listens for events
            that it is configured to fire on. When an event causes the
            trigger to fire, it automatically runs the handler logic you
            defined.

      .. image:: /images/plp/triggers.png
         :alt: Respond to Events with Triggers

.. kicker:: Key Features

Power Your Workload With Secure Backend Services
------------------------------------------------

.. card-group::
   :columns: 3
   :style: compact

   .. card::
      :cta: Serverless JavaScript Functions
      :url: https://www.mongodb.com/docs/atlas/app-services/functions/
      :icon: /images/icons/atlas-functions.png
      :icon-alt: Atlas Functions Icon

      Run your application's backend logic and connect to external
      services with functions that automatically scale to meet demand.

   .. card::
      :cta: Role-Based Permissions
      :url: https://www.mongodb.com/docs/atlas/app-services/rules/
      :icon: /images/icons/data-access-control.png
      :icon-alt: Data Access Control Icon

      Securely access data from anywhere with dynamic role-based
      permissions.

   .. card::
      :cta: Schemas and Relationships
      :url: https://www.mongodb.com/docs/atlas/app-services/schemas/
      :icon: /images/icons/document-model.png
      :icon-alt: Document Schema Icon

      Define your application data model with standard schemas that you
      can use to validate data and generate language-specific classes.

   .. card::
      :cta: User Authentication Providers
      :url: https://www.mongodb.com/docs/atlas/app-services/authentication/
      :icon: /images/icons/user-auth.png
      :icon-alt: User Authentication Icon

      Let users register and log in to your app with their preferred
      authentication method.

   .. card::
      :cta: Values & Secrets
      :url: https://www.mongodb.com/docs/atlas/app-services/values-and-secrets/
      :icon: /images/icons/features-list.png
      :icon-alt: Value List Icon

      Define and access global values and private secrets from your
      app's functions and configuration files.

   .. card::
      :cta: App Deployment Models
      :url: https://www.mongodb.com/docs/atlas/app-services/apps/deployment-models-and-regions/
      :icon: /images/icons/global.png
      :icon-alt: Deployment Models Icon

      Deploy your app in any of the three major cloud providers with
      regions around the globe.

.. kicker:: Additional Resources

Join The Community And Learn From Experts
-----------------------------------------

.. card-group::
   :columns: 3
   :style: compact
   
   .. card::
      :cta: MongoDB Developer Center
      :url: https://www.mongodb.com/developer/
      :icon: /images/icons/community.png
      :icon-alt: MongoDB Community Icon
      
      Meet other MongoDB developers and find tutorials and examples that
      use your favorite tools.
   
   .. card::
      :cta: MongoDB Feedback
      :url: https://feedback.mongodb.com/
      :icon: /images/icons/marketing-support.png
      :icon-alt: Feedback Icon
      
      Submit and vote on feature requests for MongoDB products.

   .. card::
      :cta: MongoDB Support
      :url: https://support.mongodb.com/
      :icon: /images/icons/support.png
      :icon-alt: MongoDB Support Icon

      Get help from MongoDB's official team of support specialists.
