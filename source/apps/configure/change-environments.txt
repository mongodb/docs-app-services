.. _change-environments:

===================
Change Environments
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

When you use multiple Apps in your development workflow, you must 
set the environment for each app to reflect the appropriate stage in your 
workflow. Changing the environment in your App tells Atlas App Services which 
set of environment values to use.

.. seealso::

   :ref:`App Environments <realm-app-environments>`

Procedure
---------

.. tabs::
   
   .. tab:: UI
      :tabid: ui
      
      .. procedure::

         .. step:: Navigate to the Deployment Pane

            To change your application's environment, navigate to to
            the :guilabel:`Deployment` pane through the left navigation menu and then
            click the :guilabel:`Environment` tab.


         .. step:: Select the Environment

            Select the environment for your app from the :guilabel:`Your Environment`
            dropdown menu.

            .. figure:: /images/change-environment-select-environment.png
               :width: 750px
               :alt: The environment selection dropown menu


         .. step:: Save your Changes

            Press the :guilabel:`Save` button to set the new environment.

            If you have deployment drafts enabled, you'll need to review your draft
            and deploy to finalize the environment change. Press the :guilabel:`Review
            Draft & Deploy` button in the banner at the top of the UI. You'll see
            a summary of your changes. Click the :guilabel:`Deploy` button.

   
   .. tab:: CLI
      :tabid: cli

      .. warning::

         If you're using :ref:`Automated GitHub Deploy <deploy-github>`, do not 
         update your App environment via the {+cli+}. Instead, push 
         your changes to the linked GitHub repository.
      
      .. procedure::

         .. step:: Log In to MongoDB Cloud

            To change your app environment with {+cli-bin+}, you must log in to MongoDB
            Cloud using an :atlas:`API key </configure-api-access/#programmatic-api-keys>`
            scoped to the organization or project that contains the app.

            .. code-block:: bash

               realm-cli login --api-key="<MongoDB Cloud Public API Key>" --private-api-key="<MongoDB Cloud Private API Key>"


         .. step:: Pull the Latest Version of Your App

            You'll need a local copy of your application's configuration files. To
            :ref:`pull <realm-cli-pull>` a local copy of the latest version of your
            app, run the following:

            .. code-block:: bash

               realm-cli pull --remote="<Your App ID>"

            .. tip::

               You can also download a copy of your application's configuration files from
               the :guilabel:`Deployment > Export App` screen in the App Services UI.


         .. step:: Update Your Environment

            Open the ``realm_config.json`` file at the root of the exported app,
            and update the ``environment`` property to one of the :ref:`supported
            environments <supported-environments>`.

            .. code-block:: javascript
               :caption: /realm_config.json
               :emphasize-lines: 5

               {
                 "app_id": "<App ID>",
                 "name": "<App Name>",
                 "config_version": "<Version Number>",
                 "environment": "development",
                 "allowed_request_origins": ["<Origin URL>", "..."],
                 "deployment_model": "<Deployment Model Type>",
                 "location": "<Deployment Cloud Region Name>"
               }


         .. step:: Deploy the Updated App

            Once you've updated your app's configuration file, :ref:`push <realm-cli-push>`
            to your remote app. {+cli+} immediately deploys the updated configurations
            on push.

            .. code-block:: bash

               realm-cli push --remote="<Your App ID>"

            .. tip::

               If you have :ref:`deployment drafts <deployment-draft>`
               enabled, you'll be prompted to review and confirm your changes in the
               terminal. When you approve, {+cli+} immediately deploys the updated
               configurations.

   .. tab:: GitHub
      :tabid: github

      If you're :ref:`using GitHub to version control your app <deploy-github>`, 
      use your regular development process to update the application environment.

      You can change the environment in the ``realm_config.json`` file at the 
      root of your app. Update the ``environment`` property to one of the 
      :ref:`supported environments <supported-environments>`.

      .. code-block:: javascript
         :caption: /realm_config.json
         :emphasize-lines: 5

         {
         "app_id": "<App ID>",
         "name": "<App Name>",
         "config_version": "<Version Number>",
         "environment": "development",
         "allowed_request_origins": ["<Origin URL>", "..."],
         "deployment_model": "<Deployment Model Type>",
         "location": "<Deployment Cloud Region Name>"
         }
