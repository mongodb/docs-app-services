.. _data-api-authenticate-requests:

==============================
Authenticate Data API Requests
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Data API endpoints generally require that incoming requests include
authentication information for the user calling the endpoint. This lets
the endpoint enforce rules and validate document schemas for each
request.

Requests must include authentication data in specific request headers.
App Services uses the following process to authenticate a given request:

1. Check for an ``Authorization`` header. If it's present, try to use
   :ref:`Bearer Authentication <data-api-bearer-authentication>`. The
   header must contain a valid user access token. If the token is
   invalid, the request fails.

2. If the ``Authorization`` header is not present or does not use the
   "Bearer" scheme, check for :ref:`Credential Headers
   <data-api-credential-headers>`. The headers must contain valid
   Email/Password, API Key, or Custom JWT credentials for an App user.

.. note::
   
   You must :ref:`enable an authentication provider
   <authentication-providers>` before users can authenticate with
   it.

.. _data-api-bearer-authentication:

Bearer Authentication
---------------------

The Data API supports Bearer Authentication, which lets you authenticate
a request by including a valid user access token in the request's
``Authorization`` header using the following format:

.. code-block:: text
   
   Authorization: Bearer <AccessToken>

For example, the following request uses Bearer Authentication:

.. code-block:: shell
   :emphasize-lines: 2

   curl -X POST 'https://data.mongodb-api.com/app/<AppID>/endpoint/data/v1/action/find' \
      --header 'Authorization: Bearer <AccessToken>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "dataSource": "mongodb-atlas",
        "database": "sample_mflix",
        "collection": "movies",
        "filter": {
          "title": "The Matrix"
        }
      }'

.. include:: /includes/api-user-access-token.rst

.. _data-api-credential-headers:

Credential Headers
------------------

You can authenticate a Data API request by including the user's login
credentials in the request headers. The exact headers to include depend
on the authentication provider.

Credential headers are useful for:

- requests sent from a server-side application

- requests sent from a command-line tool

- manual or test requests sent from an HTTPS client like Postman

.. important::
   
   You cannot use credential headers to authenticate requests sent from
   a web browser due to :wikipedia:`Cross-Origin Resource Sharing
   <Cross-origin_resource_sharing>` restrictions. Instead, to
   authenticate Data API requests from a browser, use :ref:`Bearer
   Authentication <data-api-bearer-authentication>`.

Email/Password
~~~~~~~~~~~~~~

To authenticate a Data API request as an :ref:`email/password
<email-password-authentication>` user, include the user's credentials in
the request's ``email`` and ``password`` headers.

.. code-block:: shell
   :emphasize-lines: 2-3

   curl -X POST 'https://data.mongodb-api.com/app/<AppID>/endpoint/data/v1/action/find' \
      --header 'email: <EmailAddress>' \
      --header 'password: <Password>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "dataSource": "mongodb-atlas",
        "database": "sample_mflix",
        "collection": "movies",
        "filter": {
          "title": "The Matrix"
        }
      }'

API Key
~~~~~~~

To authenticate a Data API request with an :ref:`API Key
<api-key-authentication>`, include the API key in the request's
``apiKey`` header.

.. code-block:: shell
   :emphasize-lines: 2

   curl -X POST 'https://data.mongodb-api.com/app/<AppID>/endpoint/data/v1/action/find' \
      --header 'apiKey: <APIKey>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "dataSource": "mongodb-atlas",
        "database": "sample_mflix",
        "collection": "movies",
        "filter": {
          "title": "The Matrix"
        }
      }'

Custom JWT
~~~~~~~~~~

To authenticate a Data API request as a :ref:`Custom JWT
<custom-jwt-authentication>` user, include the JWT string in the
request's ``jwtTokenString`` header.

.. code-block:: shell
   :emphasize-lines: 2

   curl -X POST 'https://data.mongodb-api.com/app/<AppID>/endpoint/data/v1/action/find' \
      --header 'jwtTokenString: <JWT>' \
      --header 'Content-Type: application/json' \
      --data-raw '{
        "dataSource": "mongodb-atlas",
        "database": "sample_mflix",
        "collection": "movies",
        "filter": {
          "title": "The Matrix"
        }
      }'
