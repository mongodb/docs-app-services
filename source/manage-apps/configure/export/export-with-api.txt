.. _export-app-api:

=========================================
Export an {+app+} with Atlas App Services API
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can use the :ref:`{+service-short+} Admin API <admin-api>` to export your {+app+}'s 
configuration.

.. include:: /includes/note-secrets-not-exported.rst

Prerequisites
-------------

- A `{+atlas+}
  <https://www.mongodb.com/realm?tck=docs_realm#atlas-form-container>`_
  :atlas:`programmatic API key </configure-api-access/#programmatic-api-keys>`
  for the MongoDB Cloud account you wish to log in with. You must be a
  :atlas:`Project Owner </reference/user-roles/#project-roles>` to create an
  {+app+}.

Procedure
---------

.. procedure::

   .. step:: Authenticate a MongoDB Atlas User

      .. include:: /includes/api-authenticate-instructions.rst


   .. step:: Get the Atlas Project ID

      To export an {+app+}, you need the Project ID (sometimes referred to as
      the Group ID) of the Atlas project that contains the app. You will
      include this ID in the URL of API requests.


   .. step:: Get the Application ID

      To export an {+app+} configuration, you need the app's Application ID.
      You will include this ID in the URL of API requests alongside the
      Project ID you just looked up.

      .. include:: /includes/api-get-application-id.rst


   .. step:: Export Your {+app+}

      To export your {+app+}, send a request to the app's
      :admin-api-endpoint:`export endpoint
      <operation/adminExportApplication>`. The endpoint URL should includes
      the :admin-api-endpoint:`Project ID
      <section/Project-and-Application-IDs>` and App ID you just looked up.

      Include the access token from the response document of the previous step in a
      :mdn:`Bearer token <Web/HTTP/Authentication>` ``Authorization`` header.

      .. code-block:: shell

        curl --request GET 'https://realm.mongodb.com/api/admin/v3.0/groups/<projectId>/apps/<appId>/export' \
          --header 'Authorization:  Bearer <access token>' \
          --header 'Content-Type: application/json'

      If the request is successful, the endpoint returns a ``200`` response
      and a ``.zip`` file that contains your application's current
      configuration directory.

