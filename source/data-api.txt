.. _data-api:

==============
Atlas Data API
==============

.. toctree::
   :titlesonly:
   :hidden:
   
   Data API Endpoints </data-api/generated-endpoints>
   Data API Examples </data-api/examples>
   Custom HTTPS Endpoints </data-api/custom-endpoints>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The Atlas Data API is a secure, serverless HTTPS API that lets you work with
data stored in a linked data source or run custom application logic. You
don't need to install any database drivers or opinionated libraries to
work with the Data API. Instead, you send requests like this from an
HTTPS client:

.. code-block:: bash
   
   curl -X POST \
        https://data.mongodb-api.com/app/myapp-abcde/endpoint/hello \
        -H 'apiKey: <API Key>' \
        -H 'Content-Type: application/json' \
        -d '{ "message": "Hello, world!" }'

The Data API is not a direct connection to your database. Instead, the
API is a fully-managed middleware service that sits between your cluster
and client apps. For each incoming request, the Data API authenticates
the calling user, authorizes the request, runs the endpoint logic, and
then returns an HTTPS response to the caller.

Endpoints
---------

The Data API supports two types of endpoints:

- **Data API Endpoints** are automatically generated endpoints that each
  represent a MongoDB operation. You can use the endpoints to create,
  read, update, delete, and aggregate documents in a MongoDB data
  source.

  To learn more, including how to set up and call endpoints, see
  :ref:`Data API Endpoints <data-api-endpoints>`.

- **Custom Endpoints** are app-specific API routes handled by functions
  that you write. You can use custom endpoints to run your app's backend
  logic or as webhooks that integrate with external services.

  To learn more, including how to create and call endpoints, see
  :ref:`Custom HTTPS Endpoints <custom-endpoints>`.

.. _data-api-supported-environments:

Supported Environments
----------------------

You can call the Data API from most HTTP clients. Supported environments include:

- Serverless functions
- Mobile applications
- Servers
- Internet of things devices

You **cannot** call the Data API from a web browser or any other client that
enforces the :mdn:`CORS protocol <Web/HTTP/CORS>`.
Atlas provides alternative methods to query MongoDB from the web browser:

- Use the :ref:`Realm Web SDK MongoDB client <web-query-mongodb>`.
- Configure the :ref:`Atlas GraphQL API <graphql-api>`. Then call the GraphQL API
  from the browser :ref:`using a GraphQL client, like Apollo <graphql-api>`.
- Create an :ref:`Atlas Function that queries MongoDB <functions-mongodb>`.
  Then use the Realm Web SDK to :ref:`call the Function <web-call-a-function>`.
  
.. note::

   Atlas App Services does not currently support :atlas:`private endpoints </security-private-endpoint/>`.

.. _data-api-data-formats:

Data Formats
------------

MongoDB stores data in a format called BSON, which is similar to a JSON
object in structure but supports additional data types and uses a binary
encoding. BSON is efficient for computers but is not human readable so
you can't work with it directly.

Instead, the Data API uses two formats to represent data in requests and
responses:

- The **JSON** format uses standard types that any tool can parse and
  understand. However, JSON cannot represent all BSON types so JSON
  responses may lose type information for some fields. For example, BSON
  has distinct types for 32-bit integers and 64-bit floats but a JSON
  response represents both as a ``number``.

- The **EJSON** format, short for :manual:`MongoDB Extended JSON
  </reference/mongodb-extended-json/>`, is a superset of standard JSON
  that uses structured fields to represent BSON data that don't have
  corresponding JSON types. This fully represents your data but requires
  your client to understand how to work with EJSON.

.. example::
   
   The following document shows BSON types represented in JSON and EJSON:
   
   .. tabs::
       
       .. tab:: EJSON
          :tabid: ejson
          
          .. code-block:: json
             
             {
                "Name": "Mango",
                "Year": { "$numberLong": "2022" },
                "Weight": { "$numberDecimal": "9823.1297" },
                "Date": { "$date": { "$numberLong": "1641954803067" } }
             }
       
       .. tab:: JSON
          :tabid: json
          
          .. code-block:: json
             
             {
                "Name": "Mango",
                "Year": 2022,
                "Weight": "9823.1297",
                "Date": "2022-01-12T02:33:23.067Z"
             }

You define a single default return type for all generated Data API
endpoints and individually for each custom endpoint. Incoming requests
can also specify a preferred data format that overrides the default
using an ``Accept`` header.

The following table compares the JSON and EJSON representations of each
supported type:

.. list-table::
   :header-rows: 1
   :widths: 15 42 42
   
   * - Type
     - EJSON
     - JSON
   
   * - ``Array``
     
     - .. code-block:: json
          :copyable: false

          [ <elements> ]
     
     - .. code-block:: json
          :copyable: false

          [ <elements> ]

   * - ``Binary``
     
     - .. code-block:: json
          :copyable: false

          {
             "$binary": {
                "base64": "e67803a39588be8a95731a21e27d7391",
                "subType": "05"
             }
          }
     
     - .. code-block:: json
          :copyable: false

          {
             "Subtype": 5,
             "Data": "e67803a39588be8a95731a21e27d7391"
          }

   * - ``Date``
     
     - .. code-block:: json
          :copyable: false

          {
             "$date": {
                "$numberLong": "1641954803067"
             }
          }
     
     - .. code-block:: json
          :copyable: false

          "2022-01-12T02:33:23.067Z"

   * - ``Decimal128``
     
     - .. code-block:: json
          :copyable: false

          { "$numberDecimal": "9823.1297" }
     
     - .. code-block:: json
          :copyable: false

          "9823.1297"

   * - ``Document``
     
     - .. code-block:: json
          :copyable: false

          { <content> }
     
     - .. code-block::
          :copyable: false

          { <content> }

   * - ``Double``
     
     - .. code-block:: json
          :copyable: false

          {
             "$numberDouble": "10.5"
          }
     
     - .. code-block:: json
          :copyable: false

          10.5
   
   * - ``Int32``
     
     - .. code-block:: json
          :copyable: false

          {"$numberInt":"10"}
     
     - .. code-block:: json
          :copyable: false

          10
   
   * - ``Int64``
     
     - .. code-block:: json
          :copyable: false

          {"$numberLong":"50"}
     
     - .. code-block:: json
          :copyable: false

          50
   
   * - ``MaxKey``
     
     - .. code-block:: json
          :copyable: false

          { "$maxKey": 1 }
     
     - .. code-block:: json
          :copyable: false

          {}
       
       *No JSON equivalent*

   * - ``MinKey``
     
     - .. code-block:: json
          :copyable: false

          { "$minKey": 1 }
     
     - .. code-block:: json
          :copyable: false

          {}
       
       *No JSON equivalent*

   * - ``ObjectId``
     
     - .. code-block:: json
          :copyable: false

          {
             "$oid":"5d505646cf6d4fe581014ab2"
          }
     
     - .. code-block:: json
          :copyable: false

          "5d505646cf6d4fe581014ab2"

   * - ``Regular Expression``
     
     - .. code-block:: json
          :copyable: false

          {
             "$regularExpression": {
                "pattern":"^H",
                "options":"i"
             }
          }
     
     - .. code-block:: json
          :copyable: false

          {
             "Pattern": "^H",
             "Options": "i"
          }

   * - ``Timestamp``
     
     - .. code-block:: json
          :copyable: false

          {
             "$timestamp": {
                "t":1565545664,
                "i":1
              }
          }
     
     - .. code-block:: json
          :copyable: false

          {
             "T": 1565545664,
             "I": 1
          }
